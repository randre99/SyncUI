{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class WebSocketService {\n  constructor() {\n    this.socket = null;\n    this.serverUrl = environment.websocketUrl;\n    this.connectionStatusSubject = new BehaviorSubject(false);\n    this.eventSubject = new Subject();\n    this.connectionStatus$ = this.connectionStatusSubject.asObservable();\n    this.events$ = this.eventSubject.asObservable();\n  }\n  connect(userId, userName) {\n    return new Promise((resolve, reject) => {\n      try {\n        console.log(`üîå Connecting to ${this.serverUrl} as ${userName} (${userId})`);\n        this.socket = io(this.serverUrl, {\n          auth: {\n            userId,\n            userName\n          },\n          reconnection: true,\n          reconnectionAttempts: 5,\n          reconnectionDelay: 1000,\n          transports: ['websocket', 'polling']\n        });\n        this.socket.on('connect', () => {\n          console.log(`‚úÖ Connected to collaboration server - Socket ID: ${this.socket?.id}`);\n          this.connectionStatusSubject.next(true);\n          resolve(true);\n        });\n        this.socket.on('disconnect', reason => {\n          console.log(`‚ùå Disconnected from collaboration server - Reason: ${reason}`);\n          this.connectionStatusSubject.next(false);\n        });\n        this.socket.on('connect_error', error => {\n          console.error('‚ùå Connection error:', error);\n          this.connectionStatusSubject.next(false);\n          reject(error);\n        });\n        // Listen for collaborative events\n        this.socket.on('collaborative-event', event => {\n          console.log(`üì° Received collaborative event from ${event.userId}:`, event.type, event.data);\n          this.eventSubject.next(event);\n        });\n        this.socket.on('session-updated', session => {\n          this.eventSubject.next({\n            type: 'session-updated',\n            data: session,\n            timestamp: Date.now(),\n            userId: '',\n            sessionId: session.id\n          });\n        });\n        // Listen for initial state when joining a session\n        this.socket.on('initial-state', state => {\n          console.log('üì¶ Received initial session state:', state);\n          this.eventSubject.next({\n            type: 'initial-state',\n            data: state,\n            timestamp: Date.now(),\n            userId: '',\n            sessionId: ''\n          });\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.connectionStatusSubject.next(false);\n    }\n  }\n  emit(event, data) {\n    if (this.socket && this.socket.connected) {\n      console.log(`üì§ Emitting ${event}:`, data);\n      this.socket.emit(event, data);\n    } else {\n      console.warn('‚ö†Ô∏è Socket not connected. Cannot emit event:', event, {\n        hasSocket: !!this.socket,\n        isConnected: this.socket?.connected\n      });\n    }\n  }\n  joinSession(sessionId) {\n    console.log(`üîó Joining session: ${sessionId}`);\n    this.emit('join-session', {\n      sessionId\n    });\n  }\n  leaveSession(sessionId) {\n    this.emit('leave-session', {\n      sessionId\n    });\n  }\n  createSession() {\n    console.log('üÜï Creating new session');\n    this.emit('create-session', {});\n  }\n  sendCollaborativeEvent(event) {\n    console.log(`üì§ Sending collaborative event:`, event.type, event.data);\n    this.emit('collaborative-event', event);\n  }\n  requestControl(sessionId) {\n    this.emit('request-control', {\n      sessionId\n    });\n  }\n  releaseControl(sessionId) {\n    this.emit('release-control', {\n      sessionId\n    });\n  }\n  isConnected() {\n    return this.socket ? this.socket.connected : false;\n  }\n  static {\n    this.…µfac = function WebSocketService_Factory(t) {\n      return new (t || WebSocketService)();\n    };\n  }\n  static {\n    this.…µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n      token: WebSocketService,\n      factory: WebSocketService.…µfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["io","BehaviorSubject","Subject","environment","WebSocketService","constructor","socket","serverUrl","websocketUrl","connectionStatusSubject","eventSubject","connectionStatus$","asObservable","events$","connect","userId","userName","Promise","resolve","reject","console","log","auth","reconnection","reconnectionAttempts","reconnectionDelay","transports","on","id","next","reason","error","event","type","data","session","timestamp","Date","now","sessionId","state","disconnect","emit","connected","warn","hasSocket","isConnected","joinSession","leaveSession","createSession","sendCollaborativeEvent","requestControl","releaseControl","factory","…µfac","providedIn"],"sources":["C:\\Users\\Regis\\_RegisGitProjects\\SyncUI\\src\\app\\services\\websocket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { \r\n  CollaborativeEvent, \r\n  Collaborator, \r\n  CollaborationSession \r\n} from './collaboration.types';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebSocketService {\r\n  private socket: Socket | null = null;\r\n  private readonly serverUrl = environment.websocketUrl;\r\n  \r\n  private connectionStatusSubject = new BehaviorSubject<boolean>(false);\r\n  private eventSubject = new Subject<CollaborativeEvent>();\r\n  \r\n  public connectionStatus$ = this.connectionStatusSubject.asObservable();\r\n  public events$ = this.eventSubject.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  connect(userId: string, userName: string): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        console.log(`üîå Connecting to ${this.serverUrl} as ${userName} (${userId})`);\r\n        \r\n        this.socket = io(this.serverUrl, {\r\n          auth: {\r\n            userId,\r\n            userName\r\n          },\r\n          reconnection: true,\r\n          reconnectionAttempts: 5,\r\n          reconnectionDelay: 1000,\r\n          transports: ['websocket', 'polling']\r\n        });\r\n\r\n        this.socket.on('connect', () => {\r\n          console.log(`‚úÖ Connected to collaboration server - Socket ID: ${this.socket?.id}`);\r\n          this.connectionStatusSubject.next(true);\r\n          resolve(true);\r\n        });\r\n\r\n        this.socket.on('disconnect', (reason) => {\r\n          console.log(`‚ùå Disconnected from collaboration server - Reason: ${reason}`);\r\n          this.connectionStatusSubject.next(false);\r\n        });\r\n\r\n        this.socket.on('connect_error', (error: any) => {\r\n          console.error('‚ùå Connection error:', error);\r\n          this.connectionStatusSubject.next(false);\r\n          reject(error);\r\n        });\r\n\r\n        // Listen for collaborative events\r\n        this.socket.on('collaborative-event', (event: CollaborativeEvent) => {\r\n          console.log(`üì° Received collaborative event from ${event.userId}:`, event.type, event.data);\r\n          this.eventSubject.next(event);\r\n        });\r\n\r\n        this.socket.on('session-updated', (session: CollaborationSession) => {\r\n          this.eventSubject.next({\r\n            type: 'session-updated' as any,\r\n            data: session,\r\n            timestamp: Date.now(),\r\n            userId: '',\r\n            sessionId: session.id\r\n          });\r\n        });\r\n\r\n        // Listen for initial state when joining a session\r\n        this.socket.on('initial-state', (state: {[key: string]: any}) => {\r\n          console.log('üì¶ Received initial session state:', state);\r\n          this.eventSubject.next({\r\n            type: 'initial-state' as any,\r\n            data: state,\r\n            timestamp: Date.now(),\r\n            userId: '',\r\n            sessionId: ''\r\n          });\r\n        });\r\n\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  disconnect(): void {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n      this.connectionStatusSubject.next(false);\r\n    }\r\n  }\r\n\r\n  emit(event: string, data: any): void {\r\n    if (this.socket && this.socket.connected) {\r\n      console.log(`üì§ Emitting ${event}:`, data);\r\n      this.socket.emit(event, data);\r\n    } else {\r\n      console.warn('‚ö†Ô∏è Socket not connected. Cannot emit event:', event, {\r\n        hasSocket: !!this.socket,\r\n        isConnected: this.socket?.connected\r\n      });\r\n    }\r\n  }\r\n\r\n  joinSession(sessionId: string): void {\r\n    console.log(`üîó Joining session: ${sessionId}`);\r\n    this.emit('join-session', { sessionId });\r\n  }\r\n\r\n  leaveSession(sessionId: string): void {\r\n    this.emit('leave-session', { sessionId });\r\n  }\r\n\r\n  createSession(): void {\r\n    console.log('üÜï Creating new session');\r\n    this.emit('create-session', {});\r\n  }\r\n\r\n  sendCollaborativeEvent(event: CollaborativeEvent): void {\r\n    console.log(`üì§ Sending collaborative event:`, event.type, event.data);\r\n    this.emit('collaborative-event', event);\r\n  }\r\n\r\n  requestControl(sessionId: string): void {\r\n    this.emit('request-control', { sessionId });\r\n  }\r\n\r\n  releaseControl(sessionId: string): void {\r\n    this.emit('release-control', { sessionId });\r\n  }\r\n\r\n  isConnected(): boolean {\r\n    return this.socket ? this.socket.connected : false;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}