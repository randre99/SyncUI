{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class WebSocketService {\n  constructor() {\n    this.socket = null;\n    this.serverUrl = 'http://localhost:3001';\n    this.connectionStatusSubject = new BehaviorSubject(false);\n    this.eventSubject = new Subject();\n    this.connectionStatus$ = this.connectionStatusSubject.asObservable();\n    this.events$ = this.eventSubject.asObservable();\n  }\n  connect(userId, userName) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.socket = io(this.serverUrl, {\n          auth: {\n            userId,\n            userName\n          },\n          reconnection: true,\n          reconnectionAttempts: 5,\n          reconnectionDelay: 1000\n        });\n        this.socket.on('connect', () => {\n          console.log('üîó Connected to collaboration server');\n          this.connectionStatusSubject.next(true);\n          resolve(true);\n        });\n        this.socket.on('disconnect', () => {\n          console.log('‚ùå Disconnected from collaboration server');\n          this.connectionStatusSubject.next(false);\n        });\n        this.socket.on('connect_error', error => {\n          console.error('‚ùå Connection error:', error);\n          this.connectionStatusSubject.next(false);\n          reject(error);\n        });\n        // Listen for collaborative events\n        this.socket.on('collaborative-event', event => {\n          this.eventSubject.next(event);\n        });\n        this.socket.on('session-updated', session => {\n          this.eventSubject.next({\n            type: 'session-updated',\n            data: session,\n            timestamp: Date.now(),\n            userId: '',\n            sessionId: session.id\n          });\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.connectionStatusSubject.next(false);\n    }\n  }\n  emit(event, data) {\n    if (this.socket && this.socket.connected) {\n      this.socket.emit(event, data);\n    } else {\n      console.warn('‚ö†Ô∏è Socket not connected. Cannot emit event:', event);\n    }\n  }\n  joinSession(sessionId) {\n    this.emit('join-session', {\n      sessionId\n    });\n  }\n  leaveSession(sessionId) {\n    this.emit('leave-session', {\n      sessionId\n    });\n  }\n  createSession() {\n    this.emit('create-session', {});\n  }\n  sendCollaborativeEvent(event) {\n    this.emit('collaborative-event', event);\n  }\n  requestControl(sessionId) {\n    this.emit('request-control', {\n      sessionId\n    });\n  }\n  releaseControl(sessionId) {\n    this.emit('release-control', {\n      sessionId\n    });\n  }\n  isConnected() {\n    return this.socket ? this.socket.connected : false;\n  }\n  static {\n    this.…µfac = function WebSocketService_Factory(t) {\n      return new (t || WebSocketService)();\n    };\n  }\n  static {\n    this.…µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n      token: WebSocketService,\n      factory: WebSocketService.…µfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["io","BehaviorSubject","Subject","WebSocketService","constructor","socket","serverUrl","connectionStatusSubject","eventSubject","connectionStatus$","asObservable","events$","connect","userId","userName","Promise","resolve","reject","auth","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","next","error","event","session","type","data","timestamp","Date","now","sessionId","id","disconnect","emit","connected","warn","joinSession","leaveSession","createSession","sendCollaborativeEvent","requestControl","releaseControl","isConnected","factory","…µfac","providedIn"],"sources":["C:\\Users\\Regis\\_RegisGitProjects\\SyncUI\\src\\app\\services\\websocket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { \r\n  CollaborativeEvent, \r\n  Collaborator, \r\n  CollaborationSession \r\n} from './collaboration.types';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebSocketService {\r\n  private socket: Socket | null = null;\r\n  private readonly serverUrl = 'http://localhost:3001';\r\n  \r\n  private connectionStatusSubject = new BehaviorSubject<boolean>(false);\r\n  private eventSubject = new Subject<CollaborativeEvent>();\r\n  \r\n  public connectionStatus$ = this.connectionStatusSubject.asObservable();\r\n  public events$ = this.eventSubject.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  connect(userId: string, userName: string): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.socket = io(this.serverUrl, {\r\n          auth: {\r\n            userId,\r\n            userName\r\n          },\r\n          reconnection: true,\r\n          reconnectionAttempts: 5,\r\n          reconnectionDelay: 1000,\r\n        });\r\n\r\n        this.socket.on('connect', () => {\r\n          console.log('üîó Connected to collaboration server');\r\n          this.connectionStatusSubject.next(true);\r\n          resolve(true);\r\n        });\r\n\r\n        this.socket.on('disconnect', () => {\r\n          console.log('‚ùå Disconnected from collaboration server');\r\n          this.connectionStatusSubject.next(false);\r\n        });\r\n\r\n        this.socket.on('connect_error', (error: any) => {\r\n          console.error('‚ùå Connection error:', error);\r\n          this.connectionStatusSubject.next(false);\r\n          reject(error);\r\n        });\r\n\r\n        // Listen for collaborative events\r\n        this.socket.on('collaborative-event', (event: CollaborativeEvent) => {\r\n          this.eventSubject.next(event);\r\n        });\r\n\r\n        this.socket.on('session-updated', (session: CollaborationSession) => {\r\n          this.eventSubject.next({\r\n            type: 'session-updated' as any,\r\n            data: session,\r\n            timestamp: Date.now(),\r\n            userId: '',\r\n            sessionId: session.id\r\n          });\r\n        });\r\n\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  disconnect(): void {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n      this.connectionStatusSubject.next(false);\r\n    }\r\n  }\r\n\r\n  emit(event: string, data: any): void {\r\n    if (this.socket && this.socket.connected) {\r\n      this.socket.emit(event, data);\r\n    } else {\r\n      console.warn('‚ö†Ô∏è Socket not connected. Cannot emit event:', event);\r\n    }\r\n  }\r\n\r\n  joinSession(sessionId: string): void {\r\n    this.emit('join-session', { sessionId });\r\n  }\r\n\r\n  leaveSession(sessionId: string): void {\r\n    this.emit('leave-session', { sessionId });\r\n  }\r\n\r\n  createSession(): void {\r\n    this.emit('create-session', {});\r\n  }\r\n\r\n  sendCollaborativeEvent(event: CollaborativeEvent): void {\r\n    this.emit('collaborative-event', event);\r\n  }\r\n\r\n  requestControl(sessionId: string): void {\r\n    this.emit('request-control', { sessionId });\r\n  }\r\n\r\n  releaseControl(sessionId: string): void {\r\n    this.emit('release-control', { sessionId });\r\n  }\r\n\r\n  isConnected(): boolean {\r\n    return this.socket ? this.socket.connected : false;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}