{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./collaboration.service\";\nexport class StateSyncService {\n  constructor(collaborationService, ngZone) {\n    this.collaborationService = collaborationService;\n    this.ngZone = ngZone;\n    this.isReceivingUpdate = false;\n    this.observerTargets = new Set();\n    this.formValues = new BehaviorSubject({});\n    this.formValues$ = this.formValues.asObservable();\n    this.listenForCollaborativeEvents();\n  }\n  startSyncingElement(element) {\n    if (this.observerTargets.has(element)) return;\n    this.observerTargets.add(element);\n    this.setupElementTracking(element);\n  }\n  stopSyncingElement(element) {\n    this.observerTargets.delete(element);\n  }\n  setupElementTracking(element) {\n    this.ngZone.runOutsideAngular(() => {\n      // Track form inputs\n      element.addEventListener('input', this.handleInputChange.bind(this));\n      element.addEventListener('change', this.handleInputChange.bind(this));\n      // Track clicks\n      element.addEventListener('click', event => this.handleClick(event));\n      // Track scrolling\n      element.addEventListener('scroll', this.throttle(this.handleScroll.bind(this), 50));\n      // Track selection changes (for text inputs)\n      element.addEventListener('select', this.handleSelectionChange.bind(this));\n      element.addEventListener('selectionchange', this.handleSelectionChange.bind(this));\n    });\n  }\n  handleInputChange(event) {\n    if (this.isReceivingUpdate) return;\n    const target = event.target;\n    if (!target.id && !target.name) return;\n    const identifier = target.id || target.name;\n    let value = target.value;\n    // Handle different input types\n    if (target instanceof HTMLInputElement) {\n      switch (target.type) {\n        case 'checkbox':\n        case 'radio':\n          value = target.checked;\n          break;\n        case 'number':\n          value = target.valueAsNumber;\n          break;\n        case 'range':\n          value = target.valueAsNumber;\n          break;\n      }\n    }\n    this.ngZone.run(() => {\n      const formChangeEvent = {\n        elementId: identifier,\n        value: value,\n        type: target.type || 'text'\n      };\n      this.collaborationService.sendEvent({\n        type: 'form-change',\n        data: formChangeEvent\n      });\n      // Update local state\n      const currentValues = this.formValues.value;\n      this.formValues.next({\n        ...currentValues,\n        [identifier]: value\n      });\n    });\n  }\n  handleClick(event) {\n    if (this.isReceivingUpdate) return;\n    const target = event.target;\n    const elementInfo = this.getElementInfo(target);\n    this.ngZone.run(() => {\n      const clickEvent = {\n        elementId: elementInfo.id,\n        elementType: elementInfo.tagName,\n        className: elementInfo.className,\n        x: event.clientX,\n        y: event.clientY\n      };\n      this.collaborationService.sendEvent({\n        type: 'click',\n        data: clickEvent\n      });\n    });\n  }\n  handleScroll(event) {\n    if (this.isReceivingUpdate) return;\n    const target = event.target;\n    const elementInfo = this.getElementInfo(target);\n    this.ngZone.run(() => {\n      const scrollEvent = {\n        elementId: elementInfo.id,\n        scrollTop: target.scrollTop,\n        scrollLeft: target.scrollLeft\n      };\n      this.collaborationService.sendEvent({\n        type: 'scroll',\n        data: scrollEvent\n      });\n    });\n  }\n  handleSelectionChange(event) {\n    if (this.isReceivingUpdate) return;\n    const target = event.target;\n    if (!target.id && !target.name) return;\n    const identifier = target.id || target.name;\n    this.ngZone.run(() => {\n      const selectionEvent = {\n        elementId: identifier,\n        selectionStart: target.selectionStart || 0,\n        selectionEnd: target.selectionEnd || 0\n      };\n      this.collaborationService.sendEvent({\n        type: 'selection-change',\n        data: selectionEvent\n      });\n    });\n  }\n  listenForCollaborativeEvents() {\n    this.collaborationService.getCollaborativeEvents().subscribe(event => {\n      // Don't process our own events\n      const currentUser = this.collaborationService.getCurrentUser();\n      if (currentUser && event.userId === currentUser.id) {\n        return;\n      }\n      this.isReceivingUpdate = true;\n      try {\n        switch (event.type) {\n          case 'form-change':\n            this.applyFormChange(event.data);\n            break;\n          case 'click':\n            this.applyClick(event.data);\n            break;\n          case 'scroll':\n            this.applyScroll(event.data);\n            break;\n          case 'selection-change':\n            this.applySelectionChange(event.data);\n            break;\n        }\n      } finally {\n        setTimeout(() => {\n          this.isReceivingUpdate = false;\n        }, 100);\n      }\n    });\n  }\n  applyFormChange(data) {\n    const element = document.getElementById(data.elementId) || document.querySelector(`[name=\"${data.elementId}\"]`);\n    if (!element) return;\n    const target = element;\n    if (target instanceof HTMLInputElement) {\n      switch (target.type) {\n        case 'checkbox':\n        case 'radio':\n          target.checked = Boolean(data.value);\n          break;\n        default:\n          target.value = String(data.value);\n      }\n    } else {\n      target.value = String(data.value);\n    }\n    // Trigger change event\n    target.dispatchEvent(new Event('change', {\n      bubbles: true\n    }));\n    // Update local state\n    const currentValues = this.formValues.value;\n    this.formValues.next({\n      ...currentValues,\n      [data.elementId]: data.value\n    });\n  }\n  applyClick(data) {\n    // Visual feedback for collaborative clicks\n    this.showClickFeedback(data.x, data.y);\n    // If it's a button, simulate the click\n    const element = document.getElementById(data.elementId);\n    if (element && (element.tagName === 'BUTTON' || element.onclick)) {\n      element.click();\n    }\n  }\n  applyScroll(data) {\n    const element = document.getElementById(data.elementId) || document.documentElement;\n    if (element) {\n      element.scrollTop = data.scrollTop;\n      element.scrollLeft = data.scrollLeft;\n    }\n  }\n  applySelectionChange(data) {\n    const element = document.getElementById(data.elementId) || document.querySelector(`[name=\"${data.elementId}\"]`);\n    if (element && (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement)) {\n      element.setSelectionRange(data.selectionStart, data.selectionEnd);\n    }\n  }\n  showClickFeedback(x, y) {\n    const ripple = document.createElement('div');\n    ripple.style.cssText = `\n      position: fixed;\n      left: ${x - 10}px;\n      top: ${y - 10}px;\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      background: rgba(59, 130, 246, 0.6);\n      pointer-events: none;\n      z-index: 10000;\n      animation: ripple 0.6s ease-out;\n    `;\n    // Add ripple animation if not exists\n    if (!document.querySelector('#ripple-style')) {\n      const style = document.createElement('style');\n      style.id = 'ripple-style';\n      style.textContent = `\n        @keyframes ripple {\n          0% { transform: scale(0); opacity: 1; }\n          100% { transform: scale(4); opacity: 0; }\n        }\n      `;\n      document.head.appendChild(style);\n    }\n    document.body.appendChild(ripple);\n    setTimeout(() => {\n      document.body.removeChild(ripple);\n    }, 600);\n  }\n  getElementInfo(element) {\n    return {\n      id: element.id || this.generateElementId(element),\n      tagName: element.tagName.toLowerCase(),\n      className: element.className\n    };\n  }\n  generateElementId(element) {\n    // Generate a stable ID based on element position and content\n    const rect = element.getBoundingClientRect();\n    const content = element.textContent?.slice(0, 20) || '';\n    return `elem_${element.tagName}_${Math.round(rect.top)}_${Math.round(rect.left)}_${content.replace(/\\s/g, '')}`;\n  }\n  throttle(func, limit) {\n    let inThrottle;\n    return function (...args) {\n      if (!inThrottle) {\n        func.apply(this, args);\n        inThrottle = true;\n        setTimeout(() => inThrottle = false, limit);\n      }\n    };\n  }\n  getFormValues() {\n    return this.formValues.value;\n  }\n  updateFormValue(key, value) {\n    const currentValues = this.formValues.value;\n    this.formValues.next({\n      ...currentValues,\n      [key]: value\n    });\n  }\n  static {\n    this.ɵfac = function StateSyncService_Factory(t) {\n      return new (t || StateSyncService)(i0.ɵɵinject(i1.CollaborationService), i0.ɵɵinject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StateSyncService,\n      factory: StateSyncService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","StateSyncService","constructor","collaborationService","ngZone","isReceivingUpdate","observerTargets","Set","formValues","formValues$","asObservable","listenForCollaborativeEvents","startSyncingElement","element","has","add","setupElementTracking","stopSyncingElement","delete","runOutsideAngular","addEventListener","handleInputChange","bind","event","handleClick","throttle","handleScroll","handleSelectionChange","target","id","name","identifier","value","HTMLInputElement","type","checked","valueAsNumber","run","formChangeEvent","elementId","sendEvent","data","currentValues","next","elementInfo","getElementInfo","clickEvent","elementType","tagName","className","x","clientX","y","clientY","scrollEvent","scrollTop","scrollLeft","selectionEvent","selectionStart","selectionEnd","getCollaborativeEvents","subscribe","currentUser","getCurrentUser","userId","applyFormChange","applyClick","applyScroll","applySelectionChange","setTimeout","document","getElementById","querySelector","Boolean","String","dispatchEvent","Event","bubbles","showClickFeedback","onclick","click","documentElement","HTMLTextAreaElement","setSelectionRange","ripple","createElement","style","cssText","textContent","head","appendChild","body","removeChild","generateElementId","toLowerCase","rect","getBoundingClientRect","content","slice","Math","round","top","left","replace","func","limit","inThrottle","args","apply","getFormValues","updateFormValue","key","i0","ɵɵinject","i1","CollaborationService","NgZone","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Regis\\_RegisGitProjects\\SyncUI\\src\\app\\services\\state-sync.service.ts"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CollaborationService } from './collaboration.service';\r\nimport { \r\n  FormChangeEvent, \r\n  ClickEvent, \r\n  ScrollEvent, \r\n  SelectionChangeEvent \r\n} from './collaboration.types';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StateSyncService {\r\n  private isReceivingUpdate = false;\r\n  private observerTargets = new Set<Element>();\r\n  private formValues = new BehaviorSubject<{[key: string]: any}>({});\r\n  \r\n  public formValues$ = this.formValues.asObservable();\r\n\r\n  constructor(\r\n    private collaborationService: CollaborationService,\r\n    private ngZone: NgZone\r\n  ) {\r\n    this.listenForCollaborativeEvents();\r\n  }\r\n\r\n  public startSyncingElement(element: Element): void {\r\n    if (this.observerTargets.has(element)) return;\r\n    \r\n    this.observerTargets.add(element);\r\n    this.setupElementTracking(element);\r\n  }\r\n\r\n  public stopSyncingElement(element: Element): void {\r\n    this.observerTargets.delete(element);\r\n  }\r\n\r\n  private setupElementTracking(element: Element): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      // Track form inputs\r\n      element.addEventListener('input', this.handleInputChange.bind(this));\r\n      element.addEventListener('change', this.handleInputChange.bind(this));\r\n      \r\n      // Track clicks\r\n      element.addEventListener('click', (event: Event) => this.handleClick(event as MouseEvent));\r\n      \r\n      // Track scrolling\r\n      element.addEventListener('scroll', this.throttle(this.handleScroll.bind(this), 50));\r\n      \r\n      // Track selection changes (for text inputs)\r\n      element.addEventListener('select', this.handleSelectionChange.bind(this));\r\n      element.addEventListener('selectionchange', this.handleSelectionChange.bind(this));\r\n    });\r\n  }\r\n\r\n  private handleInputChange(event: Event): void {\r\n    if (this.isReceivingUpdate) return;\r\n    \r\n    const target = event.target as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n    if (!target.id && !target.name) return;\r\n    \r\n    const identifier = target.id || target.name;\r\n    let value: any = target.value;\r\n    \r\n    // Handle different input types\r\n    if (target instanceof HTMLInputElement) {\r\n      switch (target.type) {\r\n        case 'checkbox':\r\n        case 'radio':\r\n          value = target.checked;\r\n          break;\r\n        case 'number':\r\n          value = target.valueAsNumber;\r\n          break;\r\n        case 'range':\r\n          value = target.valueAsNumber;\r\n          break;\r\n      }\r\n    }\r\n\r\n    this.ngZone.run(() => {\r\n      const formChangeEvent: FormChangeEvent = {\r\n        elementId: identifier,\r\n        value: value,\r\n        type: target.type || 'text'\r\n      };\r\n\r\n      this.collaborationService.sendEvent({\r\n        type: 'form-change',\r\n        data: formChangeEvent\r\n      });\r\n\r\n      // Update local state\r\n      const currentValues = this.formValues.value;\r\n      this.formValues.next({\r\n        ...currentValues,\r\n        [identifier]: value\r\n      });\r\n    });\r\n  }\r\n\r\n  private handleClick(event: MouseEvent): void {\r\n    if (this.isReceivingUpdate) return;\r\n    \r\n    const target = event.target as HTMLElement;\r\n    const elementInfo = this.getElementInfo(target);\r\n    \r\n    this.ngZone.run(() => {\r\n      const clickEvent: ClickEvent = {\r\n        elementId: elementInfo.id,\r\n        elementType: elementInfo.tagName,\r\n        className: elementInfo.className,\r\n        x: event.clientX,\r\n        y: event.clientY\r\n      };\r\n\r\n      this.collaborationService.sendEvent({\r\n        type: 'click',\r\n        data: clickEvent\r\n      });\r\n    });\r\n  }\r\n\r\n  private handleScroll(event: Event): void {\r\n    if (this.isReceivingUpdate) return;\r\n    \r\n    const target = event.target as HTMLElement;\r\n    const elementInfo = this.getElementInfo(target);\r\n    \r\n    this.ngZone.run(() => {\r\n      const scrollEvent: ScrollEvent = {\r\n        elementId: elementInfo.id,\r\n        scrollTop: target.scrollTop,\r\n        scrollLeft: target.scrollLeft\r\n      };\r\n\r\n      this.collaborationService.sendEvent({\r\n        type: 'scroll',\r\n        data: scrollEvent\r\n      });\r\n    });\r\n  }\r\n\r\n  private handleSelectionChange(event: Event): void {\r\n    if (this.isReceivingUpdate) return;\r\n    \r\n    const target = event.target as HTMLInputElement | HTMLTextAreaElement;\r\n    if (!target.id && !target.name) return;\r\n    \r\n    const identifier = target.id || target.name;\r\n    \r\n    this.ngZone.run(() => {\r\n      const selectionEvent: SelectionChangeEvent = {\r\n        elementId: identifier,\r\n        selectionStart: target.selectionStart || 0,\r\n        selectionEnd: target.selectionEnd || 0\r\n      };\r\n\r\n      this.collaborationService.sendEvent({\r\n        type: 'selection-change',\r\n        data: selectionEvent\r\n      });\r\n    });\r\n  }\r\n\r\n  private listenForCollaborativeEvents(): void {\r\n    this.collaborationService.getCollaborativeEvents().subscribe((event: any) => {\r\n      // Don't process our own events\r\n      const currentUser = this.collaborationService.getCurrentUser();\r\n      if (currentUser && event.userId === currentUser.id) {\r\n        return;\r\n      }\r\n\r\n      this.isReceivingUpdate = true;\r\n      \r\n      try {\r\n        switch (event.type) {\r\n          case 'form-change':\r\n            this.applyFormChange(event.data as FormChangeEvent);\r\n            break;\r\n          case 'click':\r\n            this.applyClick(event.data as ClickEvent);\r\n            break;\r\n          case 'scroll':\r\n            this.applyScroll(event.data as ScrollEvent);\r\n            break;\r\n          case 'selection-change':\r\n            this.applySelectionChange(event.data as SelectionChangeEvent);\r\n            break;\r\n        }\r\n      } finally {\r\n        setTimeout(() => {\r\n          this.isReceivingUpdate = false;\r\n        }, 100);\r\n      }\r\n    });\r\n  }\r\n\r\n  private applyFormChange(data: FormChangeEvent): void {\r\n    const element = document.getElementById(data.elementId) || \r\n                   document.querySelector(`[name=\"${data.elementId}\"]`);\r\n    \r\n    if (!element) return;\r\n    \r\n    const target = element as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n    \r\n    if (target instanceof HTMLInputElement) {\r\n      switch (target.type) {\r\n        case 'checkbox':\r\n        case 'radio':\r\n          target.checked = Boolean(data.value);\r\n          break;\r\n        default:\r\n          target.value = String(data.value);\r\n      }\r\n    } else {\r\n      target.value = String(data.value);\r\n    }\r\n\r\n    // Trigger change event\r\n    target.dispatchEvent(new Event('change', { bubbles: true }));\r\n    \r\n    // Update local state\r\n    const currentValues = this.formValues.value;\r\n    this.formValues.next({\r\n      ...currentValues,\r\n      [data.elementId]: data.value\r\n    });\r\n  }\r\n\r\n  private applyClick(data: ClickEvent): void {\r\n    // Visual feedback for collaborative clicks\r\n    this.showClickFeedback(data.x, data.y);\r\n    \r\n    // If it's a button, simulate the click\r\n    const element = document.getElementById(data.elementId);\r\n    if (element && (element.tagName === 'BUTTON' || element.onclick)) {\r\n      element.click();\r\n    }\r\n  }\r\n\r\n  private applyScroll(data: ScrollEvent): void {\r\n    const element = document.getElementById(data.elementId) || document.documentElement;\r\n    if (element) {\r\n      element.scrollTop = data.scrollTop;\r\n      element.scrollLeft = data.scrollLeft;\r\n    }\r\n  }\r\n\r\n  private applySelectionChange(data: SelectionChangeEvent): void {\r\n    const element = document.getElementById(data.elementId) || \r\n                   document.querySelector(`[name=\"${data.elementId}\"]`);\r\n    \r\n    if (element && (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement)) {\r\n      element.setSelectionRange(data.selectionStart, data.selectionEnd);\r\n    }\r\n  }\r\n\r\n  private showClickFeedback(x: number, y: number): void {\r\n    const ripple = document.createElement('div');\r\n    ripple.style.cssText = `\r\n      position: fixed;\r\n      left: ${x - 10}px;\r\n      top: ${y - 10}px;\r\n      width: 20px;\r\n      height: 20px;\r\n      border-radius: 50%;\r\n      background: rgba(59, 130, 246, 0.6);\r\n      pointer-events: none;\r\n      z-index: 10000;\r\n      animation: ripple 0.6s ease-out;\r\n    `;\r\n    \r\n    // Add ripple animation if not exists\r\n    if (!document.querySelector('#ripple-style')) {\r\n      const style = document.createElement('style');\r\n      style.id = 'ripple-style';\r\n      style.textContent = `\r\n        @keyframes ripple {\r\n          0% { transform: scale(0); opacity: 1; }\r\n          100% { transform: scale(4); opacity: 0; }\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n    }\r\n    \r\n    document.body.appendChild(ripple);\r\n    \r\n    setTimeout(() => {\r\n      document.body.removeChild(ripple);\r\n    }, 600);\r\n  }\r\n\r\n  private getElementInfo(element: HTMLElement): { id: string; tagName: string; className: string } {\r\n    return {\r\n      id: element.id || this.generateElementId(element),\r\n      tagName: element.tagName.toLowerCase(),\r\n      className: element.className\r\n    };\r\n  }\r\n\r\n  private generateElementId(element: HTMLElement): string {\r\n    // Generate a stable ID based on element position and content\r\n    const rect = element.getBoundingClientRect();\r\n    const content = element.textContent?.slice(0, 20) || '';\r\n    return `elem_${element.tagName}_${Math.round(rect.top)}_${Math.round(rect.left)}_${content.replace(/\\s/g, '')}`;\r\n  }\r\n\r\n  private throttle(func: Function, limit: number): (...args: any[]) => void {\r\n    let inThrottle: boolean;\r\n    return function(this: any, ...args: any[]) {\r\n      if (!inThrottle) {\r\n        func.apply(this, args);\r\n        inThrottle = true;\r\n        setTimeout(() => inThrottle = false, limit);\r\n      }\r\n    };\r\n  }\r\n\r\n  public getFormValues(): {[key: string]: any} {\r\n    return this.formValues.value;\r\n  }\r\n\r\n  public updateFormValue(key: string, value: any): void {\r\n    const currentValues = this.formValues.value;\r\n    this.formValues.next({\r\n      ...currentValues,\r\n      [key]: value\r\n    });\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}