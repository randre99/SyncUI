{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Regis/_RegisGitProjects/SyncUI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./websocket.service\";\nexport class CollaborationService {\n  constructor(webSocketService) {\n    this.webSocketService = webSocketService;\n    this.currentUser = null;\n    this.currentSession = null;\n    this.collaboratorsSubject = new BehaviorSubject([]);\n    this.sessionSubject = new BehaviorSubject(null);\n    this.hasControlSubject = new BehaviorSubject(false);\n    this.collaborators$ = this.collaboratorsSubject.asObservable();\n    this.session$ = this.sessionSubject.asObservable();\n    this.hasControl$ = this.hasControlSubject.asObservable();\n    this.connectionStatus$ = this.webSocketService.connectionStatus$;\n    // Listen for session updates\n    this.webSocketService.events$.pipe(filter(event => event.type === 'session-updated')).subscribe(event => {\n      this.currentSession = event.data;\n      this.sessionSubject.next(this.currentSession);\n      this.collaboratorsSubject.next(this.currentSession?.participants || []);\n      // Update control status\n      const userHasControl = this.currentSession?.participants.find(p => p.id === this.currentUser?.id)?.hasControl || false;\n      this.hasControlSubject.next(userHasControl);\n    });\n  }\n  initialize(userId, userName) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const user = userId || _this.generateUserId();\n      const name = userName || _this.generateUserName();\n      try {\n        yield _this.webSocketService.connect(user, name);\n        _this.currentUser = {\n          id: user,\n          name: name,\n          color: _this.generateUserColor(),\n          isOwner: false,\n          hasControl: false,\n          joinedAt: new Date()\n        };\n        console.log('ü§ù Collaboration service initialized for user:', _this.currentUser);\n      } catch (error) {\n        console.error('‚ùå Failed to initialize collaboration service:', error);\n        throw error;\n      }\n    })();\n  }\n  createSession() {\n    if (!this.currentUser) {\n      throw new Error('User not initialized');\n    }\n    this.webSocketService.createSession();\n  }\n  joinSession(sessionId) {\n    if (!this.currentUser) {\n      throw new Error('User not initialized');\n    }\n    this.webSocketService.joinSession(sessionId);\n  }\n  leaveSession() {\n    if (this.currentSession) {\n      this.webSocketService.leaveSession(this.currentSession.id);\n      this.currentSession = null;\n      this.sessionSubject.next(null);\n      this.collaboratorsSubject.next([]);\n      this.hasControlSubject.next(false);\n    }\n  }\n  requestControl() {\n    if (this.currentSession) {\n      this.webSocketService.requestControl(this.currentSession.id);\n    }\n  }\n  releaseControl() {\n    if (this.currentSession) {\n      this.webSocketService.releaseControl(this.currentSession.id);\n    }\n  }\n  sendEvent(event) {\n    if (!this.currentUser || !this.currentSession) {\n      return;\n    }\n    const fullEvent = {\n      ...event,\n      userId: this.currentUser.id,\n      sessionId: this.currentSession.id,\n      timestamp: Date.now()\n    };\n    this.webSocketService.sendCollaborativeEvent(fullEvent);\n  }\n  sendNavigation(route, params) {\n    this.sendEvent({\n      type: 'navigation',\n      data: {\n        route,\n        params\n      }\n    });\n  }\n  getCollaborativeEvents() {\n    return this.webSocketService.events$.pipe(filter(event => event.type !== 'session-updated'), map(event => event));\n  }\n  getCurrentUser() {\n    return this.currentUser;\n  }\n  getCurrentSession() {\n    return this.currentSession;\n  }\n  disconnect() {\n    this.leaveSession();\n    this.webSocketService.disconnect();\n    this.currentUser = null;\n  }\n  generateUserId() {\n    return 'user_' + Math.random().toString(36).substr(2, 9);\n  }\n  generateUserName() {\n    const adjectives = ['Quick', 'Clever', 'Bright', 'Swift', 'Smart', 'Bold'];\n    const nouns = ['Fox', 'Eagle', 'Lion', 'Tiger', 'Wolf', 'Bear'];\n    const adj = adjectives[Math.floor(Math.random() * adjectives.length)];\n    const noun = nouns[Math.floor(Math.random() * nouns.length)];\n    return `${adj}${noun}${Math.floor(Math.random() * 100)}`;\n  }\n  generateUserColor() {\n    const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n  static {\n    this.…µfac = function CollaborationService_Factory(t) {\n      return new (t || CollaborationService)(i0.…µ…µinject(i1.WebSocketService));\n    };\n  }\n  static {\n    this.…µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n      token: CollaborationService,\n      factory: CollaborationService.…µfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","filter","map","CollaborationService","constructor","webSocketService","currentUser","currentSession","collaboratorsSubject","sessionSubject","hasControlSubject","collaborators$","asObservable","session$","hasControl$","connectionStatus$","events$","pipe","event","type","subscribe","data","next","participants","userHasControl","find","p","id","hasControl","initialize","userId","userName","_this","_asyncToGenerator","user","generateUserId","name","generateUserName","connect","color","generateUserColor","isOwner","joinedAt","Date","console","log","error","createSession","Error","joinSession","sessionId","leaveSession","requestControl","releaseControl","sendEvent","fullEvent","timestamp","now","sendCollaborativeEvent","sendNavigation","route","params","getCollaborativeEvents","getCurrentUser","getCurrentSession","disconnect","Math","random","toString","substr","adjectives","nouns","adj","floor","length","noun","colors","i0","…µ…µinject","i1","WebSocketService","factory","…µfac","providedIn"],"sources":["C:\\Users\\Regis\\_RegisGitProjects\\SyncUI\\src\\app\\services\\collaboration.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { WebSocketService } from './websocket.service';\r\nimport { \r\n  CollaborativeEvent, \r\n  Collaborator, \r\n  CollaborationSession \r\n} from './collaboration.types';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CollaborationService {\r\n  private currentUser: Collaborator | null = null;\r\n  private currentSession: CollaborationSession | null = null;\r\n  \r\n  private collaboratorsSubject = new BehaviorSubject<Collaborator[]>([]);\r\n  private sessionSubject = new BehaviorSubject<CollaborationSession | null>(null);\r\n  private hasControlSubject = new BehaviorSubject<boolean>(false);\r\n  \r\n  public collaborators$ = this.collaboratorsSubject.asObservable();\r\n  public session$ = this.sessionSubject.asObservable();\r\n  public hasControl$ = this.hasControlSubject.asObservable();\r\n  public connectionStatus$ = this.webSocketService.connectionStatus$;\r\n\r\n  constructor(private webSocketService: WebSocketService) {\r\n    // Listen for session updates\r\n    this.webSocketService.events$.pipe(\r\n      filter((event: any) => event.type === 'session-updated' as any)\r\n    ).subscribe((event: any) => {\r\n      this.currentSession = event.data;\r\n      this.sessionSubject.next(this.currentSession);\r\n      this.collaboratorsSubject.next(this.currentSession?.participants || []);\r\n      \r\n      // Update control status\r\n      const userHasControl = this.currentSession?.participants.find(\r\n        (p: any) => p.id === this.currentUser?.id\r\n      )?.hasControl || false;\r\n      this.hasControlSubject.next(userHasControl);\r\n    });\r\n  }\r\n\r\n  async initialize(userId?: string, userName?: string): Promise<void> {\r\n    const user = userId || this.generateUserId();\r\n    const name = userName || this.generateUserName();\r\n    \r\n    try {\r\n      await this.webSocketService.connect(user, name);\r\n      \r\n      this.currentUser = {\r\n        id: user,\r\n        name: name,\r\n        color: this.generateUserColor(),\r\n        isOwner: false,\r\n        hasControl: false,\r\n        joinedAt: new Date()\r\n      };\r\n      \r\n      console.log('ü§ù Collaboration service initialized for user:', this.currentUser);\r\n    } catch (error) {\r\n      console.error('‚ùå Failed to initialize collaboration service:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  createSession(): void {\r\n    if (!this.currentUser) {\r\n      throw new Error('User not initialized');\r\n    }\r\n    \r\n    this.webSocketService.createSession();\r\n  }\r\n\r\n  joinSession(sessionId: string): void {\r\n    if (!this.currentUser) {\r\n      throw new Error('User not initialized');\r\n    }\r\n    \r\n    this.webSocketService.joinSession(sessionId);\r\n  }\r\n\r\n  leaveSession(): void {\r\n    if (this.currentSession) {\r\n      this.webSocketService.leaveSession(this.currentSession.id);\r\n      this.currentSession = null;\r\n      this.sessionSubject.next(null);\r\n      this.collaboratorsSubject.next([]);\r\n      this.hasControlSubject.next(false);\r\n    }\r\n  }\r\n\r\n  requestControl(): void {\r\n    if (this.currentSession) {\r\n      this.webSocketService.requestControl(this.currentSession.id);\r\n    }\r\n  }\r\n\r\n  releaseControl(): void {\r\n    if (this.currentSession) {\r\n      this.webSocketService.releaseControl(this.currentSession.id);\r\n    }\r\n  }\r\n\r\n  sendEvent(event: Omit<CollaborativeEvent, 'userId' | 'sessionId' | 'timestamp'>): void {\r\n    if (!this.currentUser || !this.currentSession) {\r\n      return;\r\n    }\r\n\r\n    const fullEvent: CollaborativeEvent = {\r\n      ...event,\r\n      userId: this.currentUser.id,\r\n      sessionId: this.currentSession.id,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    this.webSocketService.sendCollaborativeEvent(fullEvent);\r\n  }\r\n\r\n  sendNavigation(route: string, params?: any): void {\r\n    this.sendEvent({\r\n      type: 'navigation',\r\n      data: { route, params }\r\n    });\r\n  }\r\n\r\n  getCollaborativeEvents(): Observable<CollaborativeEvent> {\r\n    return this.webSocketService.events$.pipe(\r\n      filter((event: any) => event.type !== 'session-updated' as any),\r\n      map((event: any) => event as CollaborativeEvent)\r\n    );\r\n  }\r\n\r\n  getCurrentUser(): Collaborator | null {\r\n    return this.currentUser;\r\n  }\r\n\r\n  getCurrentSession(): CollaborationSession | null {\r\n    return this.currentSession;\r\n  }\r\n\r\n  disconnect(): void {\r\n    this.leaveSession();\r\n    this.webSocketService.disconnect();\r\n    this.currentUser = null;\r\n  }\r\n\r\n  private generateUserId(): string {\r\n    return 'user_' + Math.random().toString(36).substr(2, 9);\r\n  }\r\n\r\n  private generateUserName(): string {\r\n    const adjectives = ['Quick', 'Clever', 'Bright', 'Swift', 'Smart', 'Bold'];\r\n    const nouns = ['Fox', 'Eagle', 'Lion', 'Tiger', 'Wolf', 'Bear'];\r\n    const adj = adjectives[Math.floor(Math.random() * adjectives.length)];\r\n    const noun = nouns[Math.floor(Math.random() * nouns.length)];\r\n    return `${adj}${noun}${Math.floor(Math.random() * 100)}`;\r\n  }\r\n\r\n  private generateUserColor(): string {\r\n    const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3'];\r\n    return colors[Math.floor(Math.random() * colors.length)];\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}